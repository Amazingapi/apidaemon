<?php
/**
 * GetBlockDetailsByBlockHeightRIBSTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  com.cryptoapis.rest_apis.sdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2023-04-25
 * Contact: developers@cryptoapis.io
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace com.cryptoapis.rest_apis.sdk\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * GetBlockDetailsByBlockHeightRIBSTest Class Doc Comment
 *
 * @category    Class
 * @description GetBlockDetailsByBlockHeightRIBS
 * @package     com.cryptoapis.rest_apis.sdk
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class GetBlockDetailsByBlockHeightRIBSTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "GetBlockDetailsByBlockHeightRIBS"
     */
    public function testGetBlockDetailsByBlockHeightRIBS()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bits"
     */
    public function testPropertyBits()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "chainwork"
     */
    public function testPropertyChainwork()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "difficulty"
     */
    public function testPropertyDifficulty()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "merkle_root"
     */
    public function testPropertyMerkleRoot()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "nonce"
     */
    public function testPropertyNonce()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "size"
     */
    public function testPropertySize()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "stripped_size"
     */
    public function testPropertyStrippedSize()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "version"
     */
    public function testPropertyVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "version_hex"
     */
    public function testPropertyVersionHex()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "weight"
     */
    public function testPropertyWeight()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "extra_data"
     */
    public function testPropertyExtraData()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gas_limit"
     */
    public function testPropertyGasLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gas_used"
     */
    public function testPropertyGasUsed()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mined_in_seconds"
     */
    public function testPropertyMinedInSeconds()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sha3_uncles"
     */
    public function testPropertySha3Uncles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_difficulty"
     */
    public function testPropertyTotalDifficulty()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_fee"
     */
    public function testPropertyBaseFee()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_reserve"
     */
    public function testPropertyBaseReserve()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "failed_transactions"
     */
    public function testPropertyFailedTransactions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "protocol_version"
     */
    public function testPropertyProtocolVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_coins"
     */
    public function testPropertyTotalCoins()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
