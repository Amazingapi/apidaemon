<?php
/**
 * FeaturesApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  com.cryptoapis.rest_apis.sdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2023-04-25
 * Contact: developers@cryptoapis.io
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace com.cryptoapis.rest_apis.sdk\Test\Api;

use \com.cryptoapis.rest_apis.sdk\Configuration;
use \com.cryptoapis.rest_apis.sdk\ApiException;
use \com.cryptoapis.rest_apis.sdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * FeaturesApiTest Class Doc Comment
 *
 * @category Class
 * @package  com.cryptoapis.rest_apis.sdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class FeaturesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for broadcastLocallySignedTransaction
     *
     * Broadcast Locally Signed Transaction.
     *
     */
    public function testBroadcastLocallySignedTransaction()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for convertBitcoinCashAddress
     *
     * Convert Bitcoin Cash Address.
     *
     */
    public function testConvertBitcoinCashAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for decodeRawTransactionHex
     *
     * Decode Raw Transaction Hex.
     *
     */
    public function testDecodeRawTransactionHex()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for decodeXAddress
     *
     * Decode X-Address.
     *
     */
    public function testDecodeXAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deriveHDWalletXPubYPubZPubChangeOrReceivingAddresses
     *
     * Derive HD Wallet (xPub, yPub, zPub) Change Or Receiving Addresses.
     *
     */
    public function testDeriveHDWalletXPubYPubZPubChangeOrReceivingAddresses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for encodeXAddress
     *
     * Encode X-Address.
     *
     */
    public function testEncodeXAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for estimateGasLimit
     *
     * Estimate Gas Limit.
     *
     */
    public function testEstimateGasLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for estimateTokenGasLimit
     *
     * Estimate Token Gas Limit.
     *
     */
    public function testEstimateTokenGasLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEIP1559FeeRecommendations
     *
     * Get EIP 1559 Fee Recommendations.
     *
     */
    public function testGetEIP1559FeeRecommendations()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for prepareAFungibleTokenTransferFromAddress
     *
     * Prepare A Fungible Token Transfer From Address.
     *
     */
    public function testPrepareAFungibleTokenTransferFromAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for prepareANonFungibleTokenTransferFromAddress
     *
     * Prepare A Non Fungible Token Transfer From Address.
     *
     */
    public function testPrepareANonFungibleTokenTransferFromAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for prepareTransactionFromAddress
     *
     * Prepare Transaction From Address.
     *
     */
    public function testPrepareTransactionFromAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for validateAddress
     *
     * Validate Address.
     *
     */
    public function testValidateAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
