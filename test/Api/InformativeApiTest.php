<?php
/**
 * InformativeApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  com.cryptoapis.rest_apis.sdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2023-04-25
 * Contact: developers@cryptoapis.io
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace com.cryptoapis.rest_apis.sdk\Test\Api;

use \com.cryptoapis.rest_apis.sdk\Configuration;
use \com.cryptoapis.rest_apis.sdk\ApiException;
use \com.cryptoapis.rest_apis.sdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * InformativeApiTest Class Doc Comment
 *
 * @category Class
 * @package  com.cryptoapis.rest_apis.sdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class InformativeApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getTransactionRequestDetails
     *
     * Get Transaction Request Details.
     *
     */
    public function testGetTransactionRequestDetails()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWalletAssetDetails
     *
     * Get Wallet Asset Details.
     *
     */
    public function testGetWalletAssetDetails()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWalletTransactionDetailsByTransactionID
     *
     * Get Wallet Transaction Details By Transaction ID.
     *
     */
    public function testGetWalletTransactionDetailsByTransactionID()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAllAssetsByWalletID
     *
     * List All Assets By Wallet ID.
     *
     */
    public function testListAllAssetsByWalletID()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAllAssetsFromAllWallets
     *
     * List All Assets From All Wallets.
     *
     */
    public function testListAllAssetsFromAllWallets()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listDepositAddresses
     *
     * List Deposit Addresses.
     *
     */
    public function testListDepositAddresses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listSupportedTokens
     *
     * List Supported Tokens.
     *
     */
    public function testListSupportedTokens()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listWalletTransactions
     *
     * List Wallet Transactions.
     *
     */
    public function testListWalletTransactions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
