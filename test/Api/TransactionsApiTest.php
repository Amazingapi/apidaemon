<?php
/**
 * TransactionsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  com.cryptoapis.rest_apis.sdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CryptoAPIs
 *
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2023-04-25
 * Contact: developers@cryptoapis.io
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace com.cryptoapis.rest_apis.sdk\Test\Api;

use \com.cryptoapis.rest_apis.sdk\Configuration;
use \com.cryptoapis.rest_apis.sdk\ApiException;
use \com.cryptoapis.rest_apis.sdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * TransactionsApiTest Class Doc Comment
 *
 * @category Class
 * @package  com.cryptoapis.rest_apis.sdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TransactionsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createCoinsTransactionFromAddressForWholeAmount
     *
     * Create Coins Transaction From Address For Whole Amount.
     *
     */
    public function testCreateCoinsTransactionFromAddressForWholeAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createCoinsTransactionRequestFromAddress
     *
     * Create Coins Transaction Request from Address.
     *
     */
    public function testCreateCoinsTransactionRequestFromAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createCoinsTransactionRequestFromWallet
     *
     * Create Coins Transaction Request from Wallet.
     *
     */
    public function testCreateCoinsTransactionRequestFromWallet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createFungibleTokenTransactionRequestFromAddressWithoutFeePriority
     *
     * Create Fungible Token Transaction Request From Address Without Fee Priority.
     *
     */
    public function testCreateFungibleTokenTransactionRequestFromAddressWithoutFeePriority()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createFungibleTokensTransactionRequestFromAddress
     *
     * Create Fungible Tokens Transaction Request from Address.
     *
     */
    public function testCreateFungibleTokensTransactionRequestFromAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createSingleTransactionRequestFromAddressWithoutFeePriority
     *
     * Create Single Transaction Request From Address Without Fee Priority.
     *
     */
    public function testCreateSingleTransactionRequestFromAddressWithoutFeePriority()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
